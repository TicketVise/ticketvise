apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  ports:
  - port: 80
    name: api
    protocol: TCP
    targetPort: 8000
  selector:
    app: ticketvise-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: ticketvise-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ticketvise-backend
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: ticketvise-backend
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: ticketvise-backend
          image: registry.digitalocean.com/cr-ticketvise/backend:v2.9
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: 700m
              memory: 400Mi
            limits:
              cpu: 1000m
              memory: 700Mi
          env:
          - name: SQL_ENGINE
            value: django.db.backends.postgresql
          - name: SQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: database
          - name: SQL_USER
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: username
          - name: SQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password
          - name: SQL_HOST
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: host
          - name: SQL_PORT
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: port
          - name: DOMAIN
            value: uva.ticketvise.com
          - name: S3_USE_HTTPS
            value: "1"
          - name: S3_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: s3-credentials
                key: key
          - name: S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: s3-credentials
                key: secret
          - name: S3_ENDPOINT_URL
            valueFrom:
              secretKeyRef:
                name: s3-credentials
                key: endpoint
          - name: LTI_KEY
            valueFrom:
              secretKeyRef:
                name: lti-credentials
                key: key
          - name: LTI_SECRET
            valueFrom:
              secretKeyRef:
                name: lti-credentials
                key: secret
          - name: SEND_MAIL
            valueFrom:
              secretKeyRef:
                name: smtp-credentials
                key: enable
          - name: SMTP_OUTBOUND_PASSWORD
            valueFrom:
              secretKeyRef:
                name: smtp-credentials
                key: password
