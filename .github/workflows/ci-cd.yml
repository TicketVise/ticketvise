name: CI/CD

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:

  build-test-deploy:
    name: Build, test and deploy
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup test environment
        run: docker-compose up -d --build

      - name: Test backend
        run: docker-compose exec -T web sh -c "python manage.py wait_for_database && python manage.py test --parallel --failfast --no-input --timing"

      - name: Build and push frontend Docker image to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: frontend
          repository: ticketvise/frontend
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - name: Build and push backend Docker image to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: backend
          repository: ticketvise/backend
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - name: Generate Short Git SHA
        id: git-sha7
        run: echo "::set-output name=sha7::$(echo ${{ github.sha }} | cut -c1-7)"

      - name: Deploy to Docker Swarm (development)
        uses: sagebind/docker-swarm-deploy-action@v2
        if: github.event_name == 'push'
        env:
          DJANGO_SECRET: ${{ secrets.DJANGO_SECRET_DEV }}
          SQL_USER: ${{ secrets.SQL_USER_DEV }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD_DEV }}
          LTI_KEY: ${{ secrets.LTI_KEY_DEV }}
          LTI_SECRET: ${{ secrets.LTI_SECRET_DEV }}
          GIT_DIGEST: ${{ steps.git-sha7.outputs.sha7 }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          MINIO_ACCESS_KEY: ${{ MINIO_ACCESS_KEY_DEV }}
          MINIO_SECRET_KEY: ${{ MINIO_SECRET_KEY_DEV }}
          DOMAIN: dev.ticketvise.com
        with:
          remote_host: ${{ secrets.DOCKER_SSH_HOST_DEV }}
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY_DEV }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY_DEV }}
          args: stack deploy -c docker-compose.yml -c docker-compose.prod.yml ticketvise

      - name: Deploy to Docker Swarm (production)
        uses: sagebind/docker-swarm-deploy-action@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          DJANGO_SECRET: ${{ secrets.DJANGO_SECRET }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          LTI_KEY: ${{ secrets.LTI_KEY }}
          LTI_SECRET: ${{ secrets.LTI_SECRET }}
          GIT_DIGEST: ${{ steps.git-sha7.outputs.sha7 }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          MINIO_ACCESS_KEY: ${{ MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ MINIO_SECRET_KEY }}
          DOMAIN: uva.ticketvise.com
        with:
          remote_host: ${{ secrets.DOCKER_SSH_HOST }}
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
          args: stack deploy -c docker-compose.yml -c docker-compose.prod.yml ticketvise
